version: '3.8'

volumes:
 hm-db_vol01:
 hm-data_vol01:
 hm-data_replica_vol01:
 hm-logs_vol01:
 #ssl-certificates_vol01:

#networks:
#  traefik:
#   name: traefik
#   external: true
#  local_stack:

services:
# Rename to hm-db-seed when bootstraping a cluster.
 hm-db:
    image: docker.adipsys.com:5000/hm-ha-db
    command : seed
    # command: no-galera
    # command: node hm-db
    environment:
      - TZ=${TZ}
      - XTRABACKUP_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_ROOT_HOST=%
      - NODE_ADDRESS=^10.0.*.*
      #- FAKE_HEALTHCHECK=8081
    deploy:
      replicas: 1
      placement:
             max_replicas_per_node: 1
             constraints:
                 - node.role == manager
    
      
    volumes:
          - 'hm-db_vol01:/var/lib/mysql/'

# hm-db:
#    image: docker.adipsys.com:5000/hm-ha-db
#    command : node tasks.hm-db-seed,tasks.hm-db
#    environment:
#      - TZ=${TZ}
#      - XTRABACKUP_PASSWORD=${MYSQL_ROOT_PASSWORD}
#      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#      - MYSQL_ROOT_HOST=%
#      - NODE_ADDRESS=^10.0.*.*
#      #- FAKE_HEALTHCHECK=8081
#    deploy:
#       restart_policy:
#           condition: none
#           delay: 5s
#           max_attempts: 3
#           window: 120s
#      replicas: 0
#      placement:
#             max_replicas_per_node: 1
#             constraints:
#                 - node.role == manager
#    #networks:
#      #       - local_stack
#
#    volumes:
#          - 'hm-db_vol01:/var/lib/mysql/'
          
 hm-web:
      image: docker.adipsys.com:5000/hm-ha-web:${PRODUCT_VERSION}
      hostname: wifi-node1
      environment:
             - TZ=${TZ}
             - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
             - OPERATOR=${OPERATOR}
             - HM_SERVER_NAME=${HM_SERVER_NAME}
             - HM_URL_SUFFIX=${HM_URL_SUFFIX}
             - HOTSPOT_ALIAS1=${HOTSPOT_ALIAS1}
             - ADMIN_ALIAS1=${ADMIN_ALIAS1}
             - OPERATOR_SUPPORT_EMAIL=${OPERATOR_SUPPORT_EMAIL}
             - LICENCE_SERVER=${LICENCE_SERVER}
             - RSYSLOG_SERVER=${RSYSLOG_SERVER}
             - REMEDIATION=yes
             - SYMFONY_VERSION=1.5.11
      deploy:
         placement:
             #max_replicas_per_node: 1
             constraints:
                 - node.role == manager
         labels:
             - "traefik.enable=false"
             - "traefik.http.routers.${HM_SERVER_NAME}-admin-http.rule=Host(`${HM_SERVER_NAME}-admin.${HM_URL_SUFFIX}`)"
             - "traefik.http.routers.${HM_SERVER_NAME}-admin-http.entrypoints=web"
             
             - "traefik.http.routers.${HM_SERVER_NAME}-admin-https.rule=Host(`${HM_SERVER_NAME}-admin.${HM_URL_SUFFIX}`)"
             - "traefik.http.routers.${HM_SERVER_NAME}-admin-https.entrypoints=websecure"
             - "traefik.http.routers.${HM_SERVER_NAME}-admin-https.tls=true"
             
             - "traefik.http.routers.${HM_SERVER_NAME}-adminpc-http.rule=Host(`${HM_SERVER_NAME}.${HM_URL_SUFFIX}`) || Host(`${HM_SERVER_NAME}-api.${HM_URL_SUFFIX}`)"
             - "traefik.http.routers.${HM_SERVER_NAME}-adminpc-http.entrypoints=web"
             
             - "traefik.http.routers.${HM_SERVER_NAME}-adminpc-https.rule=Host(`${HM_SERVER_NAME}.${HM_URL_SUFFIX}`) || Host(`${HM_SERVER_NAME}-api.${HM_URL_SUFFIX}`)"
             - "traefik.http.routers.${HM_SERVER_NAME}-adminpc-https.entrypoints=websecure"
             - "traefik.http.routers.${HM_SERVER_NAME}-adminpc-https.tls=true"
        #    - "traefik.http.routers.${HM_SERVER_NAME}-adminoc-https.tls.certresolver=letsEncrypt"
            
             - "traefik.http.services.${HM_SERVER_NAME}.loadbalancer.server.port=80"
             - "traefik.http.services.${HM_SERVER_NAME}.loadbalancer.server.scheme=http"
             - "traefik.http.services.${HM_SERVER_NAME}.loadbalancer.sticky=true"
             - "traefik.http.services.${HM_SERVER_NAME}.loadbalancer.sticky.cookie.name=traefik"

             - "traefik.docker.network=traefik"
      #networks:
      #       - traefik
      #       - local_stack
      ports:
              - ${WEB_IHM_PORT}:80
              - ${WEB_IHM_SSL_PORT}:443
              - ${LOGHOST_PORT}:514/udp
      volumes:
          - 'hm-data_vol01:/user_data/'
          - 'hm-logs_vol01:/data/logs/'
         #- 'ssl-certificates_vol01:/root/hm_ssl_certificates/'
          - '/root/ssl_certificates/:/root/hm_ssl_certificates/'
         #- '/backups/:/backups/'
      depends_on:
        - "hm-db"
        
 hm-web-replica:
      image: docker.adipsys.com:5000/hm-ha-web:${PRODUCT_VERSION}
      hostname: wifi-nodeX
      environment:
             - TZ=${TZ}
             - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
             - OPERATOR=${OPERATOR}
             - HM_SERVER_NAME=${HM_SERVER_NAME}
             - HM_URL_SUFFIX=${HM_URL_SUFFIX}
             - HOTSPOT_ALIAS1=${HOTSPOT_ALIAS1}
             - ADMIN_ALIAS1=${ADMIN_ALIAS1}
             - OPERATOR_SUPPORT_EMAIL=${OPERATOR_SUPPORT_EMAIL}
             - LICENCE_SERVER=${LICENCE_SERVER}
             - RSYSLOG_SERVER=${RSYSLOG_SERVER}
             - REMEDIATION=yes
             - SYMFONY_VERSION=1.5.11
             - REPLICA=1
      deploy:
         replicas: 0
         placement:
             max_replicas_per_node: 1
             constraints:
                 - node.role == manager
                 #- node.hostname != CLOUD01-01
         labels:
             - "traefik.enable=true"
             
             - "traefik.http.routers.${HM_SERVER_NAME}-pc-http.rule=Host(`${HM_SERVER_NAME}.${HM_URL_SUFFIX}`) || Host(`${HM_SERVER_NAME}-api.${HM_URL_SUFFIX}`)"
             - "traefik.http.routers.${HM_SERVER_NAME}-pc-http.entrypoints=web"
             
             - "traefik.http.routers.${HM_SERVER_NAME}-pc-https.rule=Host(`${HM_SERVER_NAME}.${HM_URL_SUFFIX}`) || Host(`${HM_SERVER_NAME}-api.${HM_URL_SUFFIX}`)"
             - "traefik.http.routers.${HM_SERVER_NAME}-pc-https.entrypoints=websecure"
             - "traefik.http.routers.${HM_SERVER_NAME}-pc-https.tls=true"
             
             - "traefik.http.services.${HM_SERVER_NAME}-replica.loadbalancer.server.port=80"
             - "traefik.http.services.${HM_SERVER_NAME}-replica.loadbalancer.server.scheme=http"
             - "traefik.http.services.${HM_SERVER_NAME}-replica.loadbalancer.sticky=true"
             - "traefik.http.services.${HM_SERVER_NAME}-replica.loadbalancer.sticky.cookie.name=traefik"
             
             - "traefik.docker.network=traefik"
      #networks:
      #       traefik:
      #       local_stack:
      #              aliases:
      #                - hm-web
      #ports:
              #- ${WEB_IHM_PORT}:80
              #- ${WEB_IHM_SSL_PORT}:443
              #- ${LOGHOST_PORT}:514/udp
      volumes:
          - 'hm-data_replica_vol01:/user_data/'
          - 'hm-logs_vol01:/data/logs/'
         #- 'ssl-certificates_vol01:/root/hm_ssl_certificates/'
          - '/root/ssl_certificates/:/root/hm_ssl_certificates/'
      depends_on:
        - "hm-db"
        - "hm-web"
        
 hm-radius-v3:
      image: docker.adipsys.com:5000/hm-ha-radius-v3:${PRODUCT_VERSION}
      environment:
             - TZ=${TZ}
             - DEBUG=0
      #command: "freeradius -XXX"
      deploy:
         placement:
             max_replicas_per_node: 1
      #networks:
      #       - traefik
      #       - local_stack
      ports:
              - ${RADIUS_AUTH_PORT}:1812/udp
              - ${RADIUS_ACC_PORT}:1813/udp
              #- target: ${RADIUS_AUTH_PORT}
              #  published: 1812
              #  protocol: udp
              #  mode: host
              #- target: ${RADIUS_ACC_PORT}
              #  published: 1813
              #  protocol: udp
              #  mode: host
      depends_on:
        - "hm-db"
